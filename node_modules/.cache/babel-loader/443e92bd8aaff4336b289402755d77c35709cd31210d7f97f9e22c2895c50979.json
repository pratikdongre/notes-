{"ast":null,"code":"var _jsxFileName = \"/home/prat/Desktop/notes/src/App.js\",\n  _s = $RefreshSig$();\n// import { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import WebPage from \"./vision/WebPage\";\n// import Android from \"./vision/Android\";\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\n// function App() {\n//   const [dimension, setDimension] = useState(window.innerWidth);\n//   const [selected, setSelected] = useState(\"\");\n//   // const [notes, setNotes] = useState([]);\n\n//   useEffect(() => {\n//     setSelected(localStorage.getItem(\"selected\") || \"\");\n//   }, [selected]);\n\n//   const checkDimension = () => {\n//     setDimension(window.innerWidth);\n//   };\n\n//   window.addEventListener(\"resize\", checkDimension);\n\n//   return (\n//     <div className=\"App\">\n//       {dimension > 500 ? (\n//         <WebPage />\n//       ) : (\n//         <BrowserRouter>\n//           <Routes>\n//             <Route\n//               path=\"/\"\n//               element={<Android selected={selected} setSelected={setSelected} />}\n//             />\n//           </Routes>\n//         </BrowserRouter>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport WebPage from \"./vision/WebPage\";\nimport Android from \"./vision/Android\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [dimension, setDimension] = useState(window.innerWidth);\n  useEffect(() => {\n    const checkDimension = () => {\n      setDimension(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", checkDimension);\n    return () => {\n      window.removeEventListener(\"resize\", checkDimension);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: dimension > 500 ? /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(WebPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Android, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nR2nN487WmaGa0oZf8DMcSQ0dB8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WebPage","Android","BrowserRouter","Route","Routes","jsxDEV","_jsxDEV","App","_s","dimension","setDimension","window","innerWidth","checkDimension","addEventListener","removeEventListener","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/prat/Desktop/notes/src/App.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import WebPage from \"./vision/WebPage\";\n// import Android from \"./vision/Android\";\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\n// function App() {\n//   const [dimension, setDimension] = useState(window.innerWidth);\n//   const [selected, setSelected] = useState(\"\");\n//   // const [notes, setNotes] = useState([]);\n\n//   useEffect(() => {\n//     setSelected(localStorage.getItem(\"selected\") || \"\");\n//   }, [selected]);\n\n//   const checkDimension = () => {\n//     setDimension(window.innerWidth);\n//   };\n\n//   window.addEventListener(\"resize\", checkDimension);\n\n//   return (\n//     <div className=\"App\">\n//       {dimension > 500 ? (\n//         <WebPage />\n//       ) : (\n//         <BrowserRouter>\n//           <Routes>\n//             <Route\n//               path=\"/\"\n//               element={<Android selected={selected} setSelected={setSelected} />}\n//             />\n//           </Routes>\n//         </BrowserRouter>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport WebPage from \"./vision/WebPage\";\nimport Android from \"./vision/Android\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [dimension, setDimension] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const checkDimension = () => {\n      setDimension(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", checkDimension);\n\n    return () => {\n      window.removeEventListener(\"resize\", checkDimension);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          {dimension > 500 ? (\n            <Route path=\"/\" element={<WebPage />} />\n          ) : (\n            <Route path=\"/\" element={<Android />} />\n          )}\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAOA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAOC,OAAO,MAAM,kBAAkB;AACtC,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAACa,MAAM,CAACC,UAAU,CAAC;EAE7Db,SAAS,CAAC,MAAM;IACd,MAAMc,cAAc,GAAGA,CAAA,KAAM;MAC3BH,YAAY,CAACC,MAAM,CAACC,UAAU,CAAC;IACjC,CAAC;IAEDD,MAAM,CAACG,gBAAgB,CAAC,QAAQ,EAAED,cAAc,CAAC;IAEjD,OAAO,MAAM;MACXF,MAAM,CAACI,mBAAmB,CAAC,QAAQ,EAAEF,cAAc,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBX,OAAA,CAACJ,aAAa;MAAAe,QAAA,eACZX,OAAA,CAACF,MAAM;QAAAa,QAAA,EACJR,SAAS,GAAG,GAAG,gBACdH,OAAA,CAACH,KAAK;UAACe,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEb,OAAA,CAACN,OAAO;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAExCjB,OAAA,CAACH,KAAK;UAACe,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEb,OAAA,CAACL,OAAO;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACxC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACf,EAAA,CA5BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}