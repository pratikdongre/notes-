{"ast":null,"code":"import _slicedToArray from\"/home/prat/Desktop/notes/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import WebPage from \"./vision/WebPage\";\n// import Android from \"./vision/Android\";\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n// function App() {\n//   const [dimension, setDimension] = useState(window.innerWidth);\n//   const [selected, setSelected] = useState(\"\");\n//   // const [notes, setNotes] = useState([]);\n//   useEffect(() => {\n//     setSelected(localStorage.getItem(\"selected\") || \"\");\n//   }, [selected]);\n//   const checkDimension = () => {\n//     setDimension(window.innerWidth);\n//   };\n//   window.addEventListener(\"resize\", checkDimension);\n//   return (\n//     <div className=\"App\">\n//       {dimension > 500 ? (\n//         <WebPage />\n//       ) : (\n//         <BrowserRouter>\n//           <Routes>\n//             <Route\n//               path=\"/\"\n//               element={<Android selected={selected} setSelected={setSelected} />}\n//             />\n//           </Routes>\n//         </BrowserRouter>\n//       )}\n//     </div>\n//   );\n// }\n// export default App;\nimport React,{useState,useEffect}from\"react\";import\"./App.css\";import WebPage from\"./vision/WebPage\";import Android from\"./vision/Android\";import{BrowserRouter,Route,Routes}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){var _useState=useState(window.innerWidth),_useState2=_slicedToArray(_useState,2),dimension=_useState2[0],setDimension=_useState2[1];useEffect(function(){var checkDimension=function checkDimension(){setDimension(window.innerWidth);};window.addEventListener(\"resize\",checkDimension);return function(){window.removeEventListener(\"resize\",checkDimension);};},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(Routes,{children:dimension>500?/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(WebPage,{})}):/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Android,{})})})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","WebPage","Android","BrowserRouter","Route","Routes","jsx","_jsx","App","_useState","window","innerWidth","_useState2","_slicedToArray","dimension","setDimension","checkDimension","addEventListener","removeEventListener","className","children","path","element"],"sources":["/home/prat/Desktop/notes/src/App.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\n// import \"./App.css\";\n// import WebPage from \"./vision/WebPage\";\n// import Android from \"./vision/Android\";\n// import { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\n// function App() {\n//   const [dimension, setDimension] = useState(window.innerWidth);\n//   const [selected, setSelected] = useState(\"\");\n//   // const [notes, setNotes] = useState([]);\n\n//   useEffect(() => {\n//     setSelected(localStorage.getItem(\"selected\") || \"\");\n//   }, [selected]);\n\n//   const checkDimension = () => {\n//     setDimension(window.innerWidth);\n//   };\n\n//   window.addEventListener(\"resize\", checkDimension);\n\n//   return (\n//     <div className=\"App\">\n//       {dimension > 500 ? (\n//         <WebPage />\n//       ) : (\n//         <BrowserRouter>\n//           <Routes>\n//             <Route\n//               path=\"/\"\n//               element={<Android selected={selected} setSelected={setSelected} />}\n//             />\n//           </Routes>\n//         </BrowserRouter>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport WebPage from \"./vision/WebPage\";\nimport Android from \"./vision/Android\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [dimension, setDimension] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const checkDimension = () => {\n      setDimension(window.innerWidth);\n    };\n\n    window.addEventListener(\"resize\", checkDimension);\n\n    return () => {\n      window.removeEventListener(\"resize\", checkDimension);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Routes>\n          {dimension > 500 ? (\n            <Route path=\"/\" element={<WebPage />} />\n          ) : (\n            <Route path=\"/\" element={<Android />} />\n          )}\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"8GAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,WAAW,CAClB,MAAO,CAAAC,OAAO,KAAM,kBAAkB,CACtC,MAAO,CAAAC,OAAO,KAAM,kBAAkB,CACtC,OAASC,aAAa,CAAEC,KAAK,CAAEC,MAAM,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhE,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,IAAAC,SAAA,CAAkCV,QAAQ,CAACW,MAAM,CAACC,UAAU,CAAC,CAAAC,UAAA,CAAAC,cAAA,CAAAJ,SAAA,IAAtDK,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9BZ,SAAS,CAAC,UAAM,CACd,GAAM,CAAAgB,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CAC3BD,YAAY,CAACL,MAAM,CAACC,UAAU,CAAC,CACjC,CAAC,CAEDD,MAAM,CAACO,gBAAgB,CAAC,QAAQ,CAAED,cAAc,CAAC,CAEjD,MAAO,WAAM,CACXN,MAAM,CAACQ,mBAAmB,CAAC,QAAQ,CAAEF,cAAc,CAAC,CACtD,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,mBACET,IAAA,QAAKY,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBb,IAAA,CAACJ,aAAa,EAAAiB,QAAA,cACZb,IAAA,CAACF,MAAM,EAAAe,QAAA,CACJN,SAAS,CAAG,GAAG,cACdP,IAAA,CAACH,KAAK,EAACiB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEf,IAAA,CAACN,OAAO,GAAE,CAAE,CAAE,CAAC,cAExCM,IAAA,CAACH,KAAK,EAACiB,IAAI,CAAC,GAAG,CAACC,OAAO,cAAEf,IAAA,CAACL,OAAO,GAAE,CAAE,CAAE,CACxC,CACK,CAAC,CACI,CAAC,CACb,CAAC,CAEV,CAEA,cAAe,CAAAM,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}